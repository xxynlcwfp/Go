name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  first_job:
    runs-on: ubuntu-latest

    steps:
      - name: Check commit message
        run: |
          if [[ "$(git log --format=%B -n 1)" =~ ^#NORUN ]]; then
            echo "Commit message starts with #NORUN. Exiting workflow."
            exit 0
          else
            echo "Commit message does not start with #NORUN. Proceeding with workflow."
          fi
          echo "Branch name: $GITHUB_REF"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL'
          exit-code: '0' 

      - name: Check for vulnerabilities
        id: check_vulnerabilities
        run: |
          if grep -q CRITICAL trivy-results.txt; then
            echo "Vulnerabilities found."
            echo "::set-output name=vulnerabilities_found::true"
          else
            echo "No vulnerabilities found."
            echo "::set-output name=vulnerabilities_found::false"
          fi

      - name: Slack Notification
        if: steps.check_vulnerabilities.outputs.vulnerabilities_found == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Upload Trivy report to Slack
        if: steps.check_vulnerabilities.outputs.vulnerabilities_found == 'true'
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL }}
          content: 'file content'
          file_type: 'text'
          file_name: 'trivy-results.txt'
          title: 'title'
          initial_comment: 'post by slack-upload-file'

      - name: Set up QEMU
        if: success()  # Only execute if no vulnerabilities found
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: success()  # Only execute if no vulnerabilities found
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: success()  # Only execute if no vulnerabilities found
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: success()  # Only execute if no vulnerabilities found
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: xxynlcwfp/go-fortune:${{ github.sha }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Sign image with a key
        if: success()
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}"
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
          cosign verify --key cosign.pub ${images}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          TAGS: 'xxynlcwfp/go-fortune:${{ github.sha }}'

      - name: Slack Notification
        if: success()  # Only execute if no vulnerabilities found
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
         args: "Name: ${{ secrets.NAME }} | Matriculation Number: ${{ secrets.MATRICULATION_NUMBER }} | Email: ${{ secrets.EMAIL }} | Repository: ${{ github.repository }} | Docker Hub URL: https://hub.docker.com/repository/docker/xxynlcwfp/go-fortune/general"
